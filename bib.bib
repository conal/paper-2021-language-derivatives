@Misc{Elliott2021-derivatives-repo,
  author =    {Conal Elliott},
  title =     {Source code repository for \emph{Symbolic and Automatic Differentiation of Languages}},
  publisher = {GitHub},
  month =     {February},
  year =      2021,
  url =       {\protect\repoURL}
}

@inproceedings{BaanenSwierstra2020,
  author    = {Anne Baanen and Wouter Swierstra},
  Qeditor    = {Max S. New and Sam Lindley},
  title     = {\href{https://arxiv.org/abs/2005.00197}{Combining predicate transformer semantics for effects: A case study in parsing regular languages}},
  booktitle = {Proceedings Eighth Workshop on Mathematically Structured Functional Programming},
  QbooktitleEtc = {, MSFP@ETAPS 2020, Dublin, Ireland, 25th April 2020},
  Qseries    = {{EPTCS}},
  Qvolume    = {317},
  Qpages     = {39--56},
  year      = {2020},
  Qurl       = {https://doi.org/10.4204/EPTCS.317.3},
}

@inproceedings{OstermannJabs2018,
  author    = {Klaus Ostermann and Julian Jabs},
  editor    = {Amal Ahmed},
  title     = {\href{https://handin-ps.informatik.uni-tuebingen.de/publications/ostermann18dualizing.pdf}{Dualizing generalized algebraic data types by matrix transposition}},
  booktitle = {Programming Languages and Systems---27th European Symposium on Programming,
               {ESOP} 2018, Proceedings},
  restOfBookTitle = {, Held as Part of the European Joint Conferences on Theory
               and Practice of Software, {ETAPS} 2018, Thessaloniki, Greece, April
               14-20, 2018},
  Qseries    = {Lecture Notes in Computer Science},
  Qvolume    = {10801},
  Qpages     = {60--85},
  Qpublisher = {Springer},
  year      = {2018},
  Qurl       = {https://doi.org/10.1007/978-3-319-89884-1\_3},
  Qdoi       = {10.1007/978-3-319-89884-1\_3},
  Qtimestamp = {Fri, 31 Jan 2020 21:32:28 +0100},
  Qbiburl    = {https://dblp.org/rec/conf/esop/OstermannJ18.bib},
  Qbibsource = {dblp computer science bibliography, https://dblp.org}
}

@incollection{Chomsky1959CFL,
  author = "N. Chomsky and M.P. Schützenberger",
  title = {The algebraic theory of context-free languages},
  Qeditor = "P. Braffort and D. Hirschberg",
  series = "Studies in Logic and the Foundations of Mathematics",
  Qpublisher = "Elsevier",
  volume = "26",
  pages = "118--161",
  year = "1959",
  booktitle = "Computer Programming and Formal Systems",
  Qissn = "0049-237X",
  Qdoi = "https://doi.org/10.1016/S0049-237X(09)70104-1",
  Qurl = "http://www.sciencedirect.com/science/article/pii/S0049237X09701041",
  Qabstract = "Publisher Summary
This chapter describes several classes of sentence-generating devices that are closely related, in various ways, to the grammars of both natural languages and artificial languages of various kinds. Language means simply a set of strings in some finite set V of symbols called the vocabulary of the language. Grammar essentially means a set of rules that give a recursive enumeration of the strings belonging to the language. It is noted that for a class of grammars to have linguistic interest, there must be a procedure that assigns to any pair (σ, G), where σ is a string and G a grammar of this class. In particular, the structural description indicates that the string σ is a well-formed sentence of the language L (G) generated by G. However, the chapter concerns with only one aspect of the structural description of a sentence—namely, its subdivision into phrases belonging to various categories."
}

@PhdThesis{Goodman1998PIO,
    title={\href{https://arxiv.org/abs/cmp-lg/9805007}{Parsing Inside-Out}},
    author={Joshua Goodman},
    year={1998},
    month=may,
    school={Harvard University}
}

@article{Goodman1999SP,
 author = {Goodman, Joshua},
 title = {\href{http://www.aclweb.org/anthology/J99-4004}{Semiring parsing}},
 journal = {Computational Linguistics},
 Qissue_date = {December 1999},
 volume = {25},
 number = {4},
 month = dec,
 year = {1999},
 Qissn = {0891-2017},
 pages = {573--605},
 Qnumpages = {33},
 Qurl = {http://dl.acm.org/citation.cfm?id=973226.973230},
 Qacmid = {973230},
 Qpublisher = {MIT Press},
 Qaddress = {Cambridge, MA, USA},
} 

@PhdThesis{Liu2004,
  author = {Yudong Liu},
  title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.167.6977}{Algebraic Foundation of Statistical Parsing Semiring Parsing}},
  school = {Simon Fraser University},
  year = 2004,
  month = nov
}

@inproceedings{Droste2012WeightedA,
  title={\href{https://www.semanticscholar.org/paper/Weighted-automata-Droste-Kuske/f8d5980f23814e1d69a737f1f178d4a2565f7c22}{Weighted automata}},
  author={Manfred Droste and Dietrich Kuske},
  year={2012}
}

@article{Dongol2016CUC,
 author = {Dongol, Brijesh and Hayes, Ian J. and Struth, Georg},
 title = {\href{https://bura.brunel.ac.uk/bitstream/2438/12133/1/Fulltext.pdf}{Convolution as a unifying concept: Applications in separation logic, interval calculi, and concurrency}},
 journal = {ACM Transactions on Computational Logic},
 month = feb,
 year = {2016},
 Qissue_date = {July 2016},
 Qvolume = {17},
 Qnumber = {3},
 Qissn = {1529-3785},
 pages = {15:1--15:25},
 Qarticleno = {15},
 Qnumpages = {25},
 Qurl = {http://doi.acm.org/10.1145/2874773},
 Qdoi = {10.1145/2874773},
 Qacmid = {2874773},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {Concurrency, Hoare logics, convolution, formal power series, formal semantics, interval logics, quantales, semigroups, separation logics, systems verification},
} 

@book{Thue1912Gegenseitige,
  title={\href{https://archive.org/details/skrifterutgitavv121chri}{Über die gegenseitige Lage gleicher Teile gewisser Zeichenreihen}},
  author={Thue, Axel},
  series={Skrifter utgit av Videnskapsselskapet i Kristiania. 1, Math.Nat.wiss.Kl.1912,1},
  Qurl={https://books.google.ca/books?id=I0KFXwAACAAJ},
  year={1912},
  publisher={Jacob Dybwad}
}

@article{Leijen2001parsec,
  title={\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.24.5200}{Parsec: A practical parser library}},
  author={Leijen, Daan and Meijer, Erik},
  journal={Electronic Notes in Theoretical Computer Science},
  volume={41},
  number={1},
  pages={1--20},
  year={2001}
}

@inproceedings{Swierstra2008combinator,
  title={\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.184.7953}{Combinator parsing: A short tutorial}},
  author={Swierstra, S Doaitse},
  booktitle={International LerNet ALFA Summer School on Language Engineering and Rigorous Software Development},
  pages={252--300},
  year={2008},
  Qorganization={Springer}
}

@misc{Hutton1996monadic,
  title={\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.54.1678}{Monadic parser combinators}},
  author={Hutton, Graham and Meijer, Erik},
  year={1996},
  publisher={Citeseer}
}

@article{Elliott2019-convolution,
  author  = {Conal Elliott},
  title   = {\href{https://arxiv.org/abs/1903.10677}{Generalized convolution and efficient language recognition}},
  journal = {CoRR},
  mon     = mar,
  year    = {2019},
  volume  = {abs/1903.10677},
  Qurl     = {https://arxiv.org/abs/1903.10677}
}

@article{Brzozowski64,
    author = {Janusz A. Brzozowski},
    title = {Derivatives of regular expressions},
    journal = {Journal of the ACM},
    year = {1964},
    volume = {11},
    pages = {481--494}
}

@article{Elliott-2018-ad-icfp,
  author    = {Conal Elliott},
  title     = {\href{http://conal.net/papers/essence-of-ad/}{The simple essence of automatic differentiation}},
  journal   = {Proceedings of the ACM on Programming Languages},
  volume    = {2},
  number    = {ICFP},
  articleno = {4},
  numpages  = {29},
  month     = sep,
  year      = {2018},
}

@book{GriewankWalther2008EvalDerivs,
  author = {Griewank, Andreas and Walther, Andrea},
  year = {2008},
  Qmonth = {01},
  title = {Evaluating Derivatives. Principles and Techniques of Algorithmic Differentiation},
  edition = {Second},
  publisher = {Society for Industrial and Applied Mathematics},
  Qaddress = {Philadelphia, PA, USA},
  Qisbn = {978-0-89871-659-7}
}

@inproceedings{Griewank89onAD,
    author = {Andreas Griewank},
    title = {On Automatic Differentiation},
    booktitle = {In Mathematical Programming: Recent Developments and Applications},
    year = {1989},
    Qpages = {83--108},
    Qpublisher = {Kluwer Academic Publishers}
}


@book{MartinLöf1984intuitionistic,
  title={Intuitionistic type theory},
  author={Martin-Löf, Per and Sambin, Giovanni},
  volume={9},
  year={1984},
  publisher={Bibliopolis Naples}
}

@inproceedings{Norell2008AFP,
  title         = {\href{http://www.cse.chalmers.se/~ulfn/papers/afp08/tutorial.pdf}{Dependently typed programming in Agda}},
  author        = "Ulf Norell",
  booktitle     = "{Revised Lectures of the Sixth International Spring School on Advanced Functional Programming}",
  Qdoi           = "10.1007/978-3-642-04652-0_5",
  Qisbn          = "978-3-642-04651-3",
  Qpages         = "230--266",
  Qpublisher     = "{Springer International Publishing}",
  series        = "{Lecture Notes in Computer Science}",
  Qvolume        = 5832,
  year          = 2008,
}

@InProceedings{BoveEtAl2009Agda,
  author="Bove, Ana and Dybjer, Peter and Norell, Ulf",
  Qeditor="Berghofer, Stefan and Nipkow, Tobias and Urban, Christian and Wenzel, Makarius",
  title={\href{http://www.cse.chalmers.se/~ulfn/papers/tphols09/tutorial.pdf}{A brief overview of Agda --- A functional language with dependent types}},
  booktitle="Theorem Proving in Higher Order Logics",
  year="2009",
  Qpublisher="Springer Berlin Heidelberg",
  Qaddress="Berlin, Heidelberg",
  Qpages="73--78",
  abstract="We give an overview of Agda, the latest in a series of dependently typed programming languages developed in Gothenburg. Agda is based on Martin-L{\"o}f's intuitionistic type theory but extends it with numerous programming language features. It supports a wide range of inductive data types, including inductive families and inductive-recursive types, with associated flexible pattern-matching. Unlike other proof assistants, Agda is not tactic-based. Instead it has an Emacs-based interface which allows programming by gradual refinement of incomplete type-correct terms.",
  Qisbn="978-3-642-03359-9"
}


@article{Wadler2015propositions,
  title={\href{https://homepages.inf.ed.ac.uk/wadler/topics/history.html\#propositions-as-types}{Propositions as types}},
  author={Wadler, Philip},
  journal={Communications of the ACM},
  volume={58},
  number={12},
  Qpages={75--84},
  year={2015},
  Qpublisher={ACM New York, NY, USA}
}

@Inproceedings{FirsovUustalu2013,
  author = {Firsov, Denis and Uustalu, Tarmo},
  title = {\href{https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.571.724}{Certified parsing of regular languages}},
  year = {2013},
  Qisbn = {9783319035444},
  Qpublisher = {Springer-Verlag},
  Qaddress = {Berlin, Heidelberg},
  Qurl = {https://doi.org/10.1007/978-3-319-03545-1_7},
  Qdoi = {10.1007/978-3-319-03545-1_7},
  Qabstract = {We report on a certified parser generator for regular languages using the Agda programming language. Specifically, we programmed a transformation of regular expressions into a Boolean-matrix based representation of nondeterministic finite automata (NFAs). And we proved (in Agda) that a string matches a regular expression if and only if the NFA accepts it. The proof of the if-part is effectively a function turning acceptance of a string into a parse tree while the only-if part gives a function turning rejection into a proof of impossibility of a parse tree.},
  booktitle = {Proceedings of the Third International Conference on Certified Programs and Proofs - Volume 8307},
  Qpages = {98–113},
  Qnumpages = {16}
}

@article{Traytel2017,
  title = {\href{https://arxiv.org/abs/1611.09633}{Formal languages, formally and coinductively}},
  author = {Traytel, Dmitriy},
  journal = {{Logical Methods in Computer Science}},
  volume = {{Volume 13, Issue 3}},
  year = {2017},
  month = Sep,
}
@Inproceedings{DoczkalEtAl2013,
  title = {\href{https://www.ps.uni-saarland.de/~doczkal/regular/ConstructiveRegularLanguages.pdf}{A constructive theory of regular languages in Coq}},
  author = {Christian Doczkal and Jan-Oliver Kaiser and Gert Smolka},
  year = {2013},
  month = {Dec},
  Zeditor = {Geroges Gonthier and Michael Norrish},
  Zpublisher = {Springer},
  booktitle = {Certified Programs and Proofs, Third International Conference (CPP 2013)},
  Zseries = {LNCS},
  Zvolume = {8307},
  Zpages = {82-97},
}

@Misc{agda-stdlib,
  author = {{Agda Team}},
  title = {\href{https://github.com/agda/agda-stdlib}{The Agda standard library}},
  year = 2020
}

@Misc{Abel2016,
  author =    {Andreas Abel},
  title =     {\href{http://www.cse.chalmers.se/~abela/jlamp17.pdf}{Equational reasoning about formal languages in coalgebraic style}},
  year =      2016,
  note =      {draft}}

@article{Abel2008,
   title={\href{https://arxiv.org/abs/0804.0876}{Semi-continuous sized types and termination}},
   volume={4},
   ZISSN={1860-5974},
   Zurl={http://dx.doi.org/10.2168/LMCS-4(2:3)2008},
   ZDOI={10.2168/lmcs-4(2:3)2008},
   number={2},
   journal={Logical Methods in Computer Science},
   Zpublisher={Logical Methods in Computer Science e.V.},
   author={Abel, Andreas},
   Zeditor={Esik, ZoltanEditor},
   year={2008},
   month={Apr}
}

@article{AbelPientka2016,
   title={\href{https://www.cs.mcgill.ca/~bpientka/papers/jfp15.pdf}{Well-founded recursion with copatterns and sized types}},
   volume={26},
   ZDOI={10.1017/S0956796816000022},
   journal={Journal of Functional Programming},
   Zpublisher={Cambridge University Press},
   author={Abel, Andreas and Pientka, Brigitte},
   year={2016},
   Zpages={e2}
}

@inproceedings{AbelEtAl2013,
   author = {Abel, Andreas and Pientka, Brigitte and Thibodeau, David and Setzer, Anton},
   title = {\href{https://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.295.8056}{Copatterns: Programming infinite structures by observations}},
   year = {2013},
   Zisbn = {9781450318327},
   Zpublisher = {Association for Computing Machinery},
   Zaddress = {New York, NY, USA},
   Zurl = {https://doi.org/10.1145/2429069.2429075},
   Zdoi = {10.1145/2429069.2429075},
   Zabstract = {Inductive datatypes provide mechanisms to define finite data such as finite lists and trees via constructors and allow programmers to analyze and manipulate finite data via pattern matching. In this paper, we develop a dual approach for working with infinite data structures such as streams. Infinite data inhabits coinductive datatypes which denote greatest fixpoints. Unlike finite data which is defined by constructors we define infinite data by observations. Dual to pattern matching, a tool for analyzing finite data, we develop the concept of copattern matching, which allows us to synthesize infinite data. This leads to a symmetric language design where pattern matching on finite and infinite data can be mixed.We present a core language for programming with infinite structures by observations together with its operational semantics based on (co)pattern matching and describe coverage of copatterns. Our language naturally supports both call-by-name and call-by-value interpretations and can be seamlessly integrated into existing languages like Haskell and ML. We prove type soundness for our language and sketch how copatterns open new directions for solving problems in the interaction of coinductive and dependent types.},
   booktitle = {Proceedings of the 40th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
   Zpages = {27–38},
   Znumpages = {12},
   Zkeywords = {pattern matching, coinduction, introduction vs. elimination, functional programming, message passing},
   Zlocation = {Rome, Italy},
   series = {POPL '13}
}

@article{McBride2008APE,
 author = {McBride, Conor and Paterson, Ross},
 title = {\href{http://www.staff.city.ac.uk/~ross/papers/Applicative.html}{Applicative programming with effects}},
 journal = {Journal of Functional Programming},
 issue_date = {January 2008},
 volume = {18},
 number = {1},
 month = jan,
 year = {2008},
 Qissn = {0956-7968},
 pages = {1--13},
 Qnumpages = {13},
 Qurl = {http://dx.doi.org/10.1017/S0956796807006326},
 Qdoi = {10.1017/S0956796807006326},
 Qacmid = {1348941},
 Qpublisher = {Cambridge University Press},
 Qaddress = {New York, NY, USA},
}

@Unpublished{KorkutEtAl2016,
  author = {Joomy Korkut and Maksim Trifunovski and Daniel R. Licata},
  title = {\href{https://dlicata.wescreates.wesleyan.edu/pubs/ktl16regexp/ktl16regexp.pdf}{Intrinsic verification of a regular expression matcher}},
  note = {unpublished draft},
  year = 2016
}

@TechReport{AgularMannaa2009,
  author =       {Alexandre Agular and Bassel Mannaa},
  title =        {\href{https://itu.dk/people/basm/report.pdf}{Regular expressions in Agda}},
  institution =  {Chalmers University},
  year =         2009}

@article{Elliott-2018-ad-extended,
  author  = {Conal Elliott},
  title   = {\href{https://arxiv.org/abs/1804.00746}{The simple essence of automatic differentiation (Extended version)}},
  journal = {CoRR},
  mon     = apr,
  year    = {2018},
  volume  = {abs/1804.00746}
}

@techreport{Elliott-2009-tcm,
  author      = {Conal Elliott},
  title       = {\href{http://conal.net/papers/type-class-morphisms}{Denotational design with type class morphisms\out{ (extended version)}}},
  institution = {LambdaPix},
  month       = {March},
  number      = {2009-01},
  year        = 2009
}

@article{HuttonMeijer-98-parsing,
  author = "Graham Hutton and Erik Meijer",
  title = {\href{http://www.cs.nott.ac.uk/~pszgmh/pearl.pdf}{Monadic parsing in Haskell}},
  journal = "Journal of Functional Programming",
  volume = 8,
  number = 4,
  year = 1998,
  month = jul,
  Qpublisher = "Cambridge University Press",
  pages = "437--444"
}

@InProceedings{Wadler-85-successes,
  author="Philip Wadler",
  Qeditor="Jouannaud, Jean-Pierre",
  title={{How to replace failure by a list of successes}},
  moreTitle={{: A method for exception handling, backtracking, and pattern matching in lazy functional languages}},
  booktitle="Functional Programming Languages and Computer Architecture",
  year="1985",
  Qpublisher="Springer Berlin Heidelberg",
  Qaddress="Berlin, Heidelberg",
  pages="113--128",
  abstract="Should special features for exception handling, backtracking, or pattern matching be included in a programming language? This paper presents a method whereby some programs that use these features can be re-written in a functional language with lazy evaluation, without the use of any special features. This method may be of use for practicing functional programmers; in addition, it provides further evidence of the power of lazy evaluation. The method itself is straightforward: each term that may raise an exception or backtrack is replaced by a term that returns a list of values. In the special case of pattern matching without backtracking, the method can be applied even if lazy evaluation is not present. The method should be suitable for applications such as theorem proving using tacticals, as in ML/LCF.",
  Qisbn="978-3-540-39677-2"
}

@article{Might2010YaccID,
  title={\href{https://arxiv.org/abs/1010.5023}{Yacc is dead}},
  author={Matthew Might and David Darais},
  journal={CoRR},
  year={2010},
  volume={abs/1010.5023}
}

@article{Hinze2000GGT,
  author = "Ralf Hinze",
  journal = "Journal of Functional Programming",
  month = jul,
  number = 4,
  pages = "327--351",
  title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.8.4069}{Generalizing generalized tries}},
  volume = 10,
  year = 2000
}

@Misc{Bolingbroke2011CK,
  author =    {Max Bolingbroke},
  title =     {Constraint kinds for {GHC}},
  howpublished = {Blog post},
  month =     sep,
  year =      2011,
  note =    {\url{http://blog.omega-prime.co.uk/2011/09/10/constraint-kinds-for-ghc/}}
}

@misc{semiring-num,
  author = {Donnacha Oisín Kidney},
  title = {The \emph{semiring-num} package},
  year = 2016,
  howpublished = {\url{http://hackage.haskell.org/package/semiring-num}},
  note = {Haskell library}
}

@incollection{Uustalu2002DSR,
 author = {Uustalu, Tarmo and Vene, Varmo},
 title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.16.9369}{The dual of substitution is redecoration}},
 booktitle = {Trends in Functional Programming},
 year = {2002},
 Qisbn = {1-84150-070-4},
 pages = {99--110},
 Qeditor = {Hammond, Kevin and Curtis, Sharon},
 Qnumpages = {12},
 Qurl = {http://dl.acm.org/citation.cfm?id=644403.644413},
 Qacmid = {644413},
 Qpublisher = {Intellect Books},
 Qaddress = {Exeter, UK, UK},
}

@article{Lehmann77,
  author    = {Daniel J. Lehmann},
  title     = {\href{https://www.sciencedirect.com/science/article/pii/0304397577900561}{Algebraic structures for transitive closure}},
  journal   = {Theoretical Computer Science},
  volume    = {4},
  number    = {1},
  pages     = {59--76},
  year      = {1977},
  Qurl       = {https://doi.org/10.1016/0304-3975(77)90056-1},
  Qdoi       = {10.1016/0304-3975(77)90056-1},
  Qtimestamp = {Sun, 28 May 2017 13:20:00 +0200},
  Qbiburl    = {https://dblp.org/rec/bib/journals/tcs/Lehmann77},
  Qbibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Dolan2013FunSemi,
  author = {Dolan, Stephen},
  title = {\href{http://stedolan.net/research/semirings.pdf}{Fun with semirings: A functional pearl on the abuse of linear algebra}},
  booktitle = {Proceedings of the 18th ACM SIGPLAN International Conference on Functional Programming},
  series = {ICFP '13},
  year = {2013},
  Qisbn = {978-1-4503-2326-0},
  Qlocation = {Boston, Massachusetts, USA},
  pages = {101--110},
  Qnumpages = {10},
  Qurl = {http://doi.acm.org/10.1145/2500365.2500613},
  Qdoi = {10.1145/2500365.2500613},
  Qacmid = {2500613},
  Qpublisher = {ACM},
  Qaddress = {New York, NY, USA},
  Qkeywords = {closed semirings, linear systems, shortest paths, transitive closure},
} 

@inproceedings{Golan2005RecentSemi,
  title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.318.6696}{Some recent applications of semiring theory}},
  author = {Jonathan S. Golan},
  year = 2005,
  booktitle = {International Conference on Algebra in Memory of Kostia Beidar},
  comment = {definitions of semirings, traveling salesman as solution of polynomial, maxplus for belief propagation},
  keywords = {linear-algebra},
}

@PhdThesis{Wilding2015LAS,
  title={\href{https://www.escholar.manchester.ac.uk/uk-ac-man-scw:246131}{Linear Algebra Over Semirings}},
  author={Wilding, David},
  Qurl={https://books.google.com/books?id=LUwXvwEACAAJ},
  year={2015},
  school={University of Manchester}
}

@book{Golan2013SemiApps,
  title={Semirings and their Applications},
  author={Golan, Jonathan S},
  year={2013},
  publisher={Springer Science \& Business Media}
}

@inproceedings{Breitner2014SZC,
 author = {Breitner, Joachim and Eisenberg, Richard A. and Peyton Jones, Simon and Weirich, Stephanie},
 title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.587.5376}{Safe Zero-cost Coercions for Haskell}},
 booktitle = {Proceedings of the 19th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '14},
 year = {2014},
 Qisbn = {978-1-4503-2873-9},
 Qlocation = {Gothenburg, Sweden},
 pages = {189--202},
 Qnumpages = {14},
 Qurl = {http://doi.acm.org/10.1145/2628136.2628141},
 Qdoi = {10.1145/2628136.2628141},
 Qacmid = {2628141},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {coercion, haskell, newtype deriving, type class},
} 

@article{Breitner2016SZC,
  title={\href{https://www.microsoft.com/en-us/research/publication/safe-zero-cost-coercions-haskell/}{Safe zero-cost coercions for Haskell}},
  volume={26},
  QDOI={10.1017/S0956796816000150},
  journal={Journal of Functional Programming},
  publisher={Cambridge University Press},
  author={Breitner, Joachim and Eisenberg, Richard A. and Peyton Jones, Simon and Weirich, Stephanie},
  year={2016},
  pages={e15}
}

@inproceedings{Pickering2016PS,
 author = {Pickering, Matthew and \'{E}rdi, Gerg\H{o} and Peyton Jones, Simon and Eisenberg, Richard A.},
 title = {\href{https://repository.brynmawr.edu/compsci_pubs/68/}{Pattern synonyms}},
 booktitle = {Proceedings of the 9th International Symposium on Haskell},
 series = {Haskell 2016},
 year = {2016},
 Qisbn = {978-1-4503-4434-0},
 Qlocation = {Nara, Japan},
 pages = {80--91},
 Qnumpages = {12},
 Qurl = {http://doi.acm.org/10.1145/2976002.2976013},
 Qdoi = {10.1145/2976002.2976013},
 Qacmid = {2976013},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {Haskell, functional programming, pattern matching},
} 

@article{Adams1993Sets,
  title={Efficient sets---a balancing act},
  volume={3},
  number={4},
  journal={Journal of Functional Programming},
  Qpublisher={Cambridge University Press},
  author={Adams, Stephen},
  year={1993},
  pages={553–561}}

@InProceedings{Straka2012ATR,
  author="Straka, Milan",
  Qeditor="Pe{\~{n}}a, Ricardo and Page, Rex",
  title="Adams' Trees Revisited",
  booktitle="Trends in Functional Programming",
  year="2012",
  Qpublisher="Springer Berlin Heidelberg",
  Qaddress="Berlin, Heidelberg",
  pages="130--145",
  Qabstract="We present a correctness proof of Adams' trees of bounded balance, which are used in Haskell to implement Data.Map and Data.Set. Our analysis includes the previously ignored join operation, and also guarantees trees with smaller depth than the original one. Because the Adams' trees can be parametrized, we use benchmarking to find the best choice of parameters. Finally, a saving memory technique based on introducing additional data constructor is evaluated.",
  Qisbn="978-3-642-32037-8"
}

@article{Nievergelt1973BST,
  author    = {J{\"{u}}rg Nievergelt and Edward M. Reingold},
  title     = {Binary search trees of bounded balance},
  journal   = {{SIAM} Journal of Computing},
  volume    = {2},
  number    = {1},
  pages     = {33--43},
  year      = {1973},
  Qurl       = {https://doi.org/10.1137/0202005},
  Qdoi       = {10.1137/0202005},
  Qtimestamp = {Wed, 14 Nov 2018 00:00:00 +0100},
  Qbiburl    = {https://dblp.org/rec/bib/journals/siamcomp/NievergeltR73},
  Qbibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Adams2016CPP,
 author = {Adams, Michael D. and Hollenbeck, Celeste and Might, Matthew},
 title = {\href{https://arxiv.org/abs/1604.04695}{On the complexity and performance of parsing with derivatives}},
 booktitle = {Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '16},
 year = {2016},
 Qisbn = {978-1-4503-4261-2},
 Qlocation = {Santa Barbara, CA, USA},
 pages = {224--236},
 Qnumpages = {13},
 Qurl = {http://doi.acm.org/10.1145/2908080.2908128},
 Qdoi = {10.1145/2908080.2908128},
 Qacmid = {2908128},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {Parsing, Parsing with derivatives, Performance},
}

@book{Bracewell2000Fourier,
  author = {Bracewell, Ronald N.},
  title = {The {Fourier} Transform and its Applications},
  publisher = {McGraw Hill},
  year = {2000},
  Qseries = {(McGraw-Hill series in electrical and computer engineering)},
  Qaddress = {Boston},
  edition = {3rd ed.}
}

@inproceedings{Radanne2018RLG,
 author = {Radanne, Gabriel and Thiemann, Peter},
 title = {\href{https://hal.archives-ouvertes.fr/hal-01788827/document}{Regenerate: A language generator for extended regular expressions}},
 booktitle = {Proceedings of the 17th ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
 series = {GPCE 2018},
 year = {2018},
 Qisbn = {978-1-4503-6045-6},
 Qlocation = {Boston, MA, USA},
 pages = {202--214},
 Qnumpages = {13},
 Qurl = {http://doi.acm.org/10.1145/3278122.3278133},
 Qdoi = {10.1145/3278122.3278133},
 Qacmid = {3278133},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {Haskell, OCaml, Regular expressions, formal languages, parsing, power series},
} 

@article{Boisseau2018YNK,
 author = {Boisseau, Guillaume and Gibbons, Jeremy},
 title = {\href{https://www.cs.ox.ac.uk/jeremy.gibbons/publications/proyo.pdf}{What you needa know about Yoneda: Profunctor optics and the Yoneda lemma (functional pearl)}},
 journal = {Proceedings of the ACM on Programming Languages},
 number = {ICFP},
 month = jul,
 year = {2018},
 volume = {2},
 Qissue_date = {September 2018},
 Qissn = {2475-1421},
 pages = {84:1--84:27},
 articleno = {84},
 Qnumpages = {27},
 Qurl = {http://doi.acm.org/10.1145/3236779},
 Qdoi = {10.1145/3236779},
 Qacmid = {3236779},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {Lens, Yoneda Lemma, composable references, optic, prism, profunctors},
} 

@article{Hughes1986NRL,
 author = {John Hughes},
 title = {\href{https://www.cs.tufts.edu/~nr/cs257/archive/john-hughes/lists.pdf}{A novel representation of lists and its application to the function "reverse"}},
 journal = {Information Processing Letters},
 volume = {22},
 number = {3},
 month = mar,
 year = {1986},
 Qissue_date = {March 1986},
 Qissn = {0020-0190},
 pages = {141--144},
 Qnumpages = {4},
 Qurl = {http://dx.doi.org/10.1016/0020-0190(86)90059-1},
 Qdoi = {10.1016/0020-0190(86)90059-1},
 Qacmid = {8475},
 Qpublisher = {Elsevier North-Holland, Inc.},
 Qaddress = {Amsterdam, The Netherlands, The Netherlands},
} 

@InProceedings{Voigtlander2008AIC,
  author="Voigtl{\"a}nder, Janis",
  editor="Audebaud, Philippe and Paulin-Mohring, Christine",
  title= {\href{http://www.janis-voigtlaender.eu/Voi08d.html}{Asymptotic improvement of computations over free monads}},
  booktitle="Mathematics of Program Construction",
  month=jul,
  year="2008",
  Qpublisher="Springer Berlin Heidelberg",
  Qaddress="Berlin, Heidelberg",
  pages="388--403",
  Qabstract="We present a low-effort program transformation to improve the efficiency of computations over free monads in Haskell. The development is calculational and carried out in a generic setting, thus applying to a variety of datatypes. An important aspect of our approach is the utilisation of type class mechanisms to make the transformation as transparent as possible, requiring no restructuring of code at all. There is also no extra support necessary from the compiler (apart from an up-to-date type checker). Despite this simplicity of use, our technique is able to achieve true asymptotic runtime improvements. We demonstrate this by examples for which the complexity is reduced from quadratic to linear.",
  Qisbn="978-3-540-70594-9"
}

@article{Connelly1995GenTrie,
  author    = {Richard H. Connelly and F. Lockwood Morris},
  title     = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.902.7768}{A generalization of the trie data structure}},
  journal   = {Mathematical Structures in Computer Science},
  volume    = {5},
  number    = {3},
  year      = {1995},
  qpages     = {381--418},
  qurl       = {https://doi.org/10.1017/s0960129500000803},
  qdoi       = {10.1017/s0960129500000803},
  qtimestamp = {sun, 28 may 2017 13:25:37 +0200},
  qbiburl    = {https://dblp.org/rec/bib/journals/mscs/connellym95},
  qbibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{Knuth1998ACP3,
 author = {Knuth, Donald E.},
 title = {The Art of Computer Programming, Volume 3: (2nd Ed.) Sorting and Searching},
 year = {1998},
 Qisbn = {0-201-89685-0},
 publisher = {Addison Wesley Longman Publishing Co., Inc.},
 Qaddress = {Redwood City, CA, USA},
} 

@book{Smith1997SEG,
 author = {Smith, Steven W.},
 title = {\href{http://www.dspguide.com/}{The Scientist and Engineer's Guide to Digital Signal Processing}},
 year = {1997},
 publisher = {California Technical Publishing},
 Qisbn = {0-9660176-3-3},
 Qaddress = {San Diego, CA, USA},
} 

@article{LecunBengioHinton2015DLNature,
  title = "Deep learning",
  abstract = "Deep learning allows computational models that are composed of multiple processing layers to learn representations of data with multiple levels of abstraction. These methods have dramatically improved the state-of-the-art in speech recognition, visual object recognition, object detection and many other domains such as drug discovery and genomics. Deep learning discovers intricate structure in large data sets by using the backpropagation algorithm to indicate how a machine should change its internal parameters that are used to compute the representation in each layer from the representation in the previous layer. Deep convolutional nets have brought about breakthroughs in processing images, video, speech and audio, whereas recurrent nets have shone light on sequential data such as text and speech.",
  author = "Yann Lecun and Yoshua Bengio and Geoffrey Hinton",
  year = 2015,
  month = may,
  Qday = 27,
  Qdoi = "10.1038/nature14539",
  language = "English (US)",
  volume = "521",
  pages = "436--444",
  journal = "Nature",
  Qissn = "0028-0836",
  Qpublisher = "Nature Publishing Group",
  number = "7553",
}

@article{McBride2008App
 , author = {McBride, Conor and Paterson, Ross}
 , title = {\href{http://www.staff.city.ac.uk/~ross/papers/Applicative.html}{Applicative programming with effects}}
 , journal = {Journal of Functional Programming}
 , Qissue_date = {Jan. 2008}
 , volume = {18}
 , number = {1}
 , Qmonth = jan
 , year = {2008}
 , pages = {1--13}
 , Qnumpages = {13}
 , Qissn = {0956-7968}
 , Qurl = {http://dx.doi.org/10.1017/S0956796807006326}
 , Qdoi = {10.1017/S0956796807006326}
 , Qacmid = {1348941}
 , Qpublisher = {Cambridge University Press}
 , Qaddress = {New York, NY, USA}
 } 

@Misc{GHC821,
  author = {{GHC Team}},
  title = {{Glasgow Haskell Compiler user's guide---Release notes for version 8.2.1}},
  month = {July},
  year = 2017,
  note = {\url{https://downloads.haskell.org/~ghc/8.2.1/docs/html/users_guide/8.2.1-notes.html}}
}

@article{Gehrke2017Q,
  author    = {Mai Gehrke and
               Daniela Petrisan and
               Luca Reggio},
  title     = {\href{http://arxiv.org/abs/1702.08841}{Quantifiers on languages and codensity monads}},
  journal   = {CoRR},
  volume    = {abs/1702.08841},
  year      = {2017},
  QarchivePrefix = {arXiv},
  Qeprint    = {1702.08841},
  Qtimestamp = {Mon, 13 Aug 2018 16:46:31 +0200},
  Qbiburl    = {https://dblp.org/rec/bib/journals/corr/GehrkePR17},
  Qbibsource = {dblp computer science bibliography, https://dblp.org}
}


@Misc{Kmett2011FreeModules,
  author = {Edward Kmett},
  title = {Free modules and functional linear functionals},
  howpublished = {Blog post},
  month = jul,
  year = 2011,
  note = {\url{http://comonad.com/reader/2011/free-modules-and-functional-linear-functionals/}}}


@Misc{Piponi2007MonadVS,
  author = {Dan Piponi},
  title = {Monads for vector spaces, probability and quantum mechanics pt. I},
  howpublished = {Blog post},
  month = feb,
  year = 2007,
  note = {\url{http://blog.sigfpe.com/2007/02/monads-for-vector-spaces-probability.html}}}

@article{Uustalu2008CNC,
 author = {Uustalu, Tarmo and Vene, Varmo},
 title = {\href{https://www.sciencedirect.com/science/article/pii/S1571066108003435}{Comonadic notions of computation}},
 journal = {Electronic Notes in Theoretical Computer Science (ENTCS)},
 Qissue_date = {June, 2008},
 volume = {203},
 number = {5},
 month = jun,
 year = {2008},
 Qissn = {1571-0661},
 pages = {263--284},
 Qnumpages = {22},
 Qurl = {http://dx.doi.org/10.1016/j.entcs.2008.05.029},
 Qdoi = {10.1016/j.entcs.2008.05.029},
 Qacmid = {1380266},
 Qpublisher = {Elsevier Science Publishers B. V.},
 Qaddress = {Amsterdam, The Netherlands, The Netherlands},
 Qkeywords = {coKleisli semantics, context-dependent computation, dataflow computation, symmetric monoidal comonads, tree transformations},
}

@inproceedings{Uustalu2005EDP,
 author = {Uustalu, Tarmo and Vene, Varmo},
 title = {\href{https://www.researchgate.net/publication/221540984_The_Essence_of_Dataflow_Programming}{The essence of dataflow programming}},
 booktitle = {Proceedings of the Third Asian Conference on Programming Languages and Systems},
 series = {APLAS'05},
 year = {2005},
 Qisbn = {3-540-29735-9, 978-3-540-29735-2},
 Qlocation = {Tsukuba, Japan},
 pages = {2--18},
 Qnumpages = {17},
 Qurl = {http://dx.doi.org/10.1007/11575467_2},
 Qdoi = {10.1007/11575467_2},
 Qacmid = {2099712},
 Qpublisher = {Springer-Verlag},
 Qaddress = {Berlin, Heidelberg},
}

@article{Uustalu2011RS,
  author = "Tarmo Uustalu and Varmo Vene",
  title = {\href{https://www.sciencedirect.com/science/article/pii/S1571066111000570}{The recursion scheme from the cofree recursive comonad}},
  journal = "Electronic Notes in Theoretical Computer Science",
  note = "Proceedings of the Second Workshop on Mathematically Structured Functional Programming (MSFP 2008)",
  year = "2011",
  volume = "229",
  number = "5",
  pages = "135 - 157",
  Qissn = "1571-0661",
  Qdoi = "https://doi.org/10.1016/j.entcs.2011.02.020",
  Qurl = "http://www.sciencedirect.com/science/article/pii/S1571066111000570",
  keywords = "structured recursion, comonad-based recursion, cofree comonads, cofree recursive comonads, Mendler recursion, circular proofs",
  abstract = "We instantiate the general comonad-based construction of recursion schemes for the initial algebra of a functor F to the cofree recursive comonad on F. Differently from the scheme based on the cofree comonad on F in a similar fashion, this scheme allows not only recursive calls on elements structurally smaller than the given argument, but also subsidiary recursions. We develop a Mendler formulation of the scheme via a generalized Yoneda lemma for initial algebras involving strong dinaturality and hint a relation to circular proofs à la Cockett, Santocanale."
}

@inproceedings{Hinze2013USR,
 author = {Hinze, Ralf and Wu, Nicolas and Gibbons, Jeremy},
 title = {\href{http://www.cs.ox.ac.uk/jeremy.gibbons/publications/urs.pdf}{Unifying structured recursion schemes}},
 booktitle = {Proceedings of the 18th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '13},
 year = {2013},
 Qisbn = {978-1-4503-2326-0},
 Qlocation = {Boston, Massachusetts, USA},
 pages = {209--220},
 Qnumpages = {12},
 Qurl = {http://doi.acm.org/10.1145/2500365.2500578},
 Qdoi = {10.1145/2500365.2500578},
 Qacmid = {2500578},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 keywords = {adjunctions, bialgebras, comonads, distributive laws, recursion schemes},
}

@Misc{Penner2017RSTT,
  author = {Chris Penner},
  title = {Radix sort, trie trees, and maps from representable functors},
  howpublished = {Blog post},
  month = jul,
  year = 2017,
  note = {\url{https://chrispenner.ca/posts/representable-discrimination}}
}

@Misc{Kmett2015MfL,
  author = {Edward Kmett},
  title = {Moore for less},
  howpublished = {Blog post},
  month = may,
  year = 2015,
  note = {\url{https://www.schoolofhaskell.com/user/edwardk/moore/for-less}}
}

@misc{Alom2018History,
    title={The History Began from AlexNet: A Comprehensive Survey on Deep Learning Approaches},
    author={Md Zahangir Alom and Tarek M. Taha and Christopher Yakopcic and Stefan Westberg and Paheding Sidike and Mst Shamima Nasrin and Brian C Van Esesn and Abdul A S. Awwal and Vijayan K. Asari},
    year={2018},
    eprint={1803.01164},
    archivePrefix={arXiv},
    primaryClass={cs.CV}
}

@article{Schmidhuber2015DL,
title = {\href{http://www.sciencedirect.com/science/article/pii/S0893608014002135}{Deep learning in neural networks: An overview}},
author = "Jürgen Schmidhuber",
journal = "Neural Networks",
volume = "61",
year = "2015",
pages = "85--117",
Qissn = "0893-6080",
Qdoi = "https://doi.org/10.1016/j.neunet.2014.09.003",
keywords = "Deep learning, Supervised learning, Unsupervised learning, Reinforcement learning, Evolutionary computation",
abstract = "In recent years, deep artificial neural networks (including recurrent ones) have won numerous contests in pattern recognition and machine learning. This historical survey compactly summarizes relevant work, much of it from the previous millennium. Shallow and Deep Learners are distinguished by the depth of their credit assignment paths, which are chains of possibly learnable, causal links between actions and effects. I review deep supervised learning (also recapitulating the history of backpropagation), unsupervised learning, reinforcement learning & evolutionary computation, and indirect search for short programs encoding deep and large networks."
}

@article{Fukushima1988Neo,
  author = "Kunihiko Fukushima",
  title = {\href{http://www.sciencedirect.com/science/article/pii/0893608088900147}{Neocognitron: A hierarchical neural network capable of visual pattern recognition}},
  journal = "Neural Networks",
  volume = "1",
  number = "2",
  pages = "119--130",
  year = "1988",
  Qissn = "0893-6080",
  Qdoi = "https://doi.org/10.1016/0893-6080(88)90014-7",
  abstract = "A neural network model for visual pattern recognition, called the “neocognitron,” was previously proposed by the author. In this paper, we discuss the mechanism of the model in detail. In order to demonstrate the ability of the neocognitron, we also discuss a pattern-recognition system which works with the mechanism of the neocognitron. The system has been implemented on a minicomputer and has been trained to recognize handwritten numerals. The neocognitron is a hierarchical network consisting of many layers of cells, and has variable connections between the cells in adjoining layers. It can acquire the ability to recognize patterns by learning, and can be trained to recognize any set of patterns. After finishing the process of learning, pattern recognition is performed on the basis of similarity in shape between patterns, and is not affected by deformation, nor by changes in size, nor by shifts in the position of the input patterns. In the hierarchical network of the neocognitron, local features of the input pattern are extracted by the cells of a lower stage, and they are gradually integrated into more global features. Finally, each cell of the highest stage integrates all the information of the input pattern, and responds only to one specific pattern. Thus, the response of the cells of the highest stage shows the final result of the pattern-recognition of the network. During this process of extracting and integrating features, errors in the relative position of local features are gradually tolerated. The operation of tolerating positional error a little at a time at each stage, rather than all in one step, plays an important role in endowing the network with an ability to recognize even distorted patterns."
}

@article{LeCun1998GBDR, 
  author={Yann LeCun and L{\'e}on Bottou and Patrick Haffner},
  journal={Proceedings of the IEEE}, 
  title={\href{http://yann.lecun.com/exdb/publis/pdf/lecun-98.pdf}{Gradient-based learning applied to document recognition}}, 
  year={1998}, 
  month=nov,
  volume={86}, 
  number={11}, 
  pages={2278-2324}, 
  keywords={optical character recognition;multilayer perceptrons;backpropagation;convolution;gradient-based learning;document recognition;multilayer neural networks;back-propagation;gradient based learning technique;complex decision surface synthesis;high-dimensional patterns;handwritten character recognition;handwritten digit recognition task;2D shape variability;document recognition systems;field extraction;segmentation recognition;language modeling;graph transformer networks;GTN;multimodule systems;performance measure minimization;cheque reading;convolutional neural network character recognizers;Neural networks;Pattern recognition;Machine learning;Optical character recognition software;Character recognition;Feature extraction;Multi-layer neural network;Optical computing;Hidden Markov models;Principal component analysis}, 
  Qdoi={10.1109/5.726791}, 
  QISSN={0018-9219}, 
}

@Book{Pratt2006DIP,
  author = {William K. Pratt},
  title = {Digital Image Processing},
  publisher = {John Wiley \& Sons, Inc},
  year = 2006,
  edition = 4
}

@misc{Young95FIP,
  author = {Ian T. Young and Jan J. Gerbrands and Lucas J. van Vliet},
  title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.2.6400}{Fundamentals Of Image Processing}},
  year = {1995},
  Qnote = {\href{http://www.imageprocessingplace.com/downloads_V3/root_downloads/tutorials/Image%20Processing%20Fundamentals--An%20Overview.pdf}}
}

@book{Grinstead2003IP,
  title = {\href{http://www.dartmouth.edu/~chance/teaching_aids/books_articles/probability_book/book.html}{Introduction to Probability}},
  author = {Grinstead, Charles M. and Snell, J. Laurie},
  howpublished = {GNU FDL PDF online},
  institution = {AMS},
  keywords = {probability statistics},
  publisher = {AMS},
  year = 2003
}

@Misc{HassICM1,
  author = {Jeffrey Hass},
  title = {Introduction to Computer Music: Volume One},
  year = 2013,
  note = {\url{http://www.indiana.edu/~emusic/etext/toc.shtml}}}

@Misc{Pishdadian2017FRC,
  author = {Fatemeh Pishdadian},
  title = {Filters, reverberation \& convolution},
  howpublished = {\url{http://www.cs.northwestern.edu/~pardo/courses/eecs352/lectures/MPM16-topic9-Filtering.pdf}},
  year = 2017,
  note = {Lecture notes}}

@book{Yarlagadda2010ADSS,
  author = {R. K. Rao Yarlagadda},
  title = {Analog and Digital Signals and Systems},
  publisher = "Springer",
  year = 2010,
  note = {Chapter 2: \url{https://www.springer.com/cda/content/document/cda_downloaddocument/9781441900333-c1.pdf}}
}

@Misc{SnehaHL2017Conv,
  author = {Sneha H.L.},
  title = {Better insight into {DSP}: 10 applications of convolution in various fields},
  month = jul,
  year = 2017,
  note = {\url{https://www.allaboutcircuits.com/technical-articles/dsp-applications-of-convolution-part-2/}}}

@Misc{Maguire2016,
  author =    {Sandy Maguire},
  title =     {Wake up and smell the cofree comonads},
  howpublished = {Blog post},
  month =     jun,
  year =      2016,
  note =      {\url{https://reasonablypolymorphic.com/blog/cofree-comonads/}}}

@inproceedings{Fischer2010PRE,
 author = {Fischer, Sebastian and Huch, Frank and Wilke, Thomas},
 title = {\href{https://sebfisch.github.io/haskell-regexp/regexp-play.pdf}{A play on regular expressions: Functional pearl}},
 booktitle = {Proceedings of the 15th ACM SIGPLAN International Conference on Functional Programming},
 series = {ICFP '10},
 year = {2010},
 Qisbn = {978-1-60558-794-3},
 Qlocation = {Baltimore, Maryland, USA},
 pages = {357--368},
 Qnumpages = {12},
 Qurl = {http://doi.acm.org/10.1145/1863543.1863594},
 Qdoi = {10.1145/1863543.1863594},
 Qacmid = {1863594},
 Qpublisher = {ACM},
 Qaddress = {New York, NY, USA},
 Qkeywords = {finite automata, glushkov construction, purely functional programming, regular expressions},
}

@article{Schutzenberger1961FA,
  author = "M.P. Schützenberger",
  title = {\href{http://www.sciencedirect.com/science/article/pii/S001999586180020X}{On the definition of a family of automata}},
  journal = "Information and Control",
  volume = "4",
  number = "2",
  pages = "245--270",
  year = "1961",
  Qissn = "0019-9958",
  Qdoi = "https://doi.org/10.1016/S0019-9958(61)80020-X",
}

@inproceedings{Piponi2015PF,
  author    = {Dan Piponi and
               Brent A. Yorgey},
  title     = {\href{https://www.semanticscholar.org/paper/Polynomial-Functors-Constrained-by-Regular-Piponi-Yorgey/218c8e27a6cb53f9983e40789ab530e446a81a05}{Polynomial functors constrained by regular expressions}},
  booktitle = {{MPC}},
  series    = {Lecture Notes in Computer Science},
  volume    = {9129},
  pages     = {113--136},
  publisher = {Springer},
  year      = {2015}
}

@article{Owens2009RE,
  author = {Scott Owens and John Reppy and Aaron Turon},
  title = {Regular-expression derivatives reexamined},
  journal = {Journal of Functional Programming},
  Qpublisher = {Cambridge University Press},
  Qaddress = {Cambridge, England},
  volume = 19,
  number = 2,
  year = 2009,
  pages = {173--190},
  abstract = {
    Regular-expression derivatives are an old, but elegant, technique for compiling regular
    expressions to deterministic finite-state machines.
    It easily supports extending the regular-expression operators with boolean operations,
    such as intersection and complement.
    Unfortunately, this technique has been lost in the sands of time and few computer
    scientists are aware of it.
    In this paper, we reexamine regular-expression derivatives and report on our experiences in
    the context of two different functional-language implementations.
    The basic implementation is simple and we show how to extend it to handle large character
    sets (e.g., Unicode).
    We also show that the derivatives approach leads to smaller state machines than the
    traditional algorithm given by McNaughton and Yamada.
  },
  topic = {implementation}
}

@article{McIlroy2001MS,
 author = {McIlroy, M. Douglas},
 title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.37.2313}{The music of streams}},
 journal = {Information Processing Letters},
 Qissue_date = {Feb. 1, 2001},
 volume = {77},
 number = {2-4},
 month = feb,
 year = {2001},
 Qissn = {0020-0190},
 pages = {189--195},
 Qnumpages = {7},
 Qurl = {http://dx.doi.org/10.1016/S0020-0190(00)00201-5},
 Qdoi = {10.1016/S0020-0190(00)00201-5},
 Qacmid = {375483},
 Qpublisher = {Elsevier North-Holland, Inc.},
 Qaddress = {Amsterdam, The Netherlands, The Netherlands},
 Qkeywords = {Maclaurin form, data streams, functional programming, horner form, power series},
} 

@article{McIlroy1999PSPS,
 author = {McIlroy, M. Douglas},
 title = {\href{http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.38.9450}{Power series, power serious}},
 journal = {Journal of Functional Programming},
 issue_date = {May 1999},
 volume = {9},
 number = {3},
 month = may,
 year = {1999},
 Qissn = {0956-7968},
 pages = {325--337},
 Qnumpages = {13},
 Qurl = {http://dx.doi.org/10.1017/S0956796899003299},
 Qdoi = {10.1017/S0956796899003299},
 Qacmid = {968597},
 Qpublisher = {Cambridge University Press},
 Qaddress = {New York, NY, USA},
} 

@Misc{Kidney2017CA,
  author = {Donnacha Oisín Kidney},
  title = {Constrained applicatives},
  howpublished = {Blog post},
  month = mar,
  year = 2017,
  note = {\url{https://doisinkidney.com/posts/2017-03-08-constrained-applicatives.html}}
}

@Misc{Kidney2017CS,
  author = {Donnacha Oisín Kidney},
  title = {Convolutions and semirings},
  howpublished = {Blog post},
  month = oct,
  year = 2017,
  note = {\url{https://doisinkidney.com/posts/2017-10-13-convolutions-and-semirings.html}}
}

@Misc{Kidney2016Semi,
  author = {Donnacha Oisín Kidney},
  title = {Semirings},
  howpublished = {Blog post},
  month = nov,
  year = 2016,
  note = {\url{https://doisinkidney.com/posts/2016-11-17-semirings-lhs.html}}
}

@Misc{criterion,
  author =    {Bryan O'Sullivan},
  title =     {criterion: a Haskell microbenchmarking library},
  Qhowpublished = {Web page},
  year =      2014,
  note =      {\url{http://www.serpentine.com/criterion/}}}

@Misc{Typeclassopedia,
  author =    {Brent Yorgey},
  title =     {Typeclassopedia},
  month =     apr,
  year =      2017,
  note =      {\url{https://wiki.haskell.org/Typeclassopedia}. Updated from original version in \href{https://wiki.haskell.org/wikiupload/8/85/TMR-Issue13.pdf}{\emph{The Monad Reader}, March 2009}}}

@Misc{Petrick2016Kernels,
  author =    {Taylor Petrick},
  title =     {Convolution part three: Common kernels},
  month =     jan,
  year =      2016,
  note =      {\url{https://www.taylorpetrick.com/blog/post/convolution-part3}}}

@inproceedings{Yorgey2012Monoids,
  author = {Yorgey, Brent},
  title = {Monoids: Theme and variations (functional pearl)},
  booktitle = {Proceedings of the 2012 Haskell Symposium},
  Qseries = {Haskell '12},
  year = {2012},
  Qisbn = {978-1-4503-1574-6},
  Qlocation = {Copenhagen, Denmark},
  pages = {105--116},
  Qnumpages = {12},
  Qurl = {http://doi.acm.org/10.1145/2364506.2364520},
  Qdoi = {10.1145/2364506.2364520},
  Qacmid = {2364520},
  Qpublisher = {ACM},
  Qaddress = {New York, NY, USA},
  Qkeywords = {edsl, homomorphism, monoid, monoid action},
} 

@misc{Data.Map,
  author = {Daan Leijen},
  title = {\emph{Data.Map}},
  year = 2002,
  howpublished = {\url{http://hackage.haskell.org/package/containers/docs/Data-Map.html}},
  note = {Haskell library}
}
